Drone Survey Management System
Design Challenge
Overview
Design a scalable system that enables large corporations to plan, manage, and monitor
autonomous drone surveys across their global facilities. This system will streamline facility
inspections, security monitoring, and site mapping operations.
We expect you to use AI-assisted tools (Claude Code, Cursor AI, Windsurf, Lovable, Replit
etc) to aid your development process and to document how these tools helped expedite your
work. The assignment is designed to be challenging yet achievable within the time limit when
leveraging the latest AI tools and practices.
Problem Statement
Corporate facility managers need a comprehensive platform to:
1. 2. 3. 4. Create and manage survey missions across multiple international campus locations
Schedule recurring or on-demand aerial surveys
Monitor ongoing missions with real-time tracking
Access and review detailed survey reports
Project Scope
This assignment focuses exclusively on the mission management and reporting aspects of
drone operations:
●
●
●
●
Mission planning and configuration
Fleet visualization and management
Real-time mission monitoring
Survey reporting and analytics
Note: Viewing live video feed, actual collection of survey data (images/videos) and the
generation of maps/models are outside the scope of this project.
Key Requirements
Functional Requirements
●
●
●
●
Mission Planning System:
○
Define survey areas and flight paths
○
Configure flight paths, altitudes, and waypoints
○
Set data collection parameters (frequency, sensors to use)
○
Schedule one-time or recurring missions
Fleet Management Dashboard:
○
Display organization-wide drone inventory
○
Show real-time status of drones (available, in-mission)
○
Display battery levels and other vital statistics
Mission Monitoring Interface:
○
Visualize real-time drone flight paths on a map
○
Display mission progress (% complete, estimated time remaining)
○
Show survey status updates (starting, in progress, completed, aborted)
○
Enable mission control actions (pause, resume, abort)
Survey Reporting Portal:
○
Present comprehensive survey summaries
○
Display individual flight statistics (duration, distance, coverage)
○
Display overall org-wide survey statistics (total surveys done etc)
Technical Considerations
●
●
●
The system should be scalable to handle multiple concurrent missions across different
locations
The system should support advanced survey mission patterns like crosshatch, and
perimeter patterns to optimize data collection efficiency.
Users should be able to configure mission-specific parameters such as flight altitude,
overlap percentage, etc. for comprehensive site coverage.
Submission Details:
●
Code:
○
●
Submit your code through a private GitHub repository (GitHub provides them free
of cost).
○
The code should be modular and well-documented.
○
Add assignments@flytbase.com as a contributor to the repo.
Comprehensive Documentation:
○
○
○
○
●
Videos:
○
○
README File:
Include detailed setup and running instructions.
■ Explain your design decisions and architectural choices.
■ Detail the AI tools you integrated, including their impact on your workflow.
Design Artifacts:
Submit flowcharts, system architecture diagrams, or any other design artifacts
that illustrate your problem-solving process and overall system design.
Testing Documentation:
Explain how you validated the system’s functionality including test cases.
Critical Explanations:
■ A brief write-up summarizing:
●
How you approached the problem.
●
The trade-offs you considered during development.
●
Your strategy for ensuring safety and adaptability in the system.
Short demo video showcasing the application in action.
Any additional bonus features implemented.
Evaluation Criteria
Your solution will be evaluated on:
1. 2. 3. 4. 5. Functionality and Capabilities of the Solution (30%)
Code Quality and Technical Architecture (20%)
User experience design and workflow optimization (20%)
Effective use of AI tools to enhance your design process (20%)
Quality and clarity of documentation. (10%)